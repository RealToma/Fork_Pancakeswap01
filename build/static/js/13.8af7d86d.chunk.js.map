{"version":3,"sources":["state/teams/hooks.ts","views/ProfileCreation/SelectionCard.tsx","../node_modules/lodash/_shuffleSelf.js","../node_modules/date-fns/esm/differenceInMilliseconds/index.js","../node_modules/date-fns/esm/compareAsc/index.js","../node_modules/date-fns/esm/_lib/cloneObject/index.js","../node_modules/lodash/shuffle.js","../node_modules/lodash/_arrayShuffle.js","../node_modules/lodash/_baseShuffle.js","../node_modules/date-fns/esm/differenceInSeconds/index.js","views/ProfileCreation/config.ts","views/ProfileCreation/contexts/ProfileCreationProvider.tsx","views/ProfileCreation/Header.tsx","views/ProfileCreation/WalletNotConnected.tsx","views/ProfileCreation/NextStepButton.tsx","views/ProfileCreation/contexts/hook.ts","views/ProfileCreation/Mint.tsx","views/ProfileCreation/ProfilePicture.tsx","views/ProfileCreation/TeamSelection.tsx","../node_modules/date-fns/esm/isLastDayOfMonth/index.js","../node_modules/date-fns/esm/differenceInMonths/index.js","../node_modules/date-fns/esm/formatDistance/index.js","views/ProfileCreation/UserName.tsx","utils/fetchWithTimeout.ts","views/ProfileCreation/ConfirmProfileCreationModal.tsx","views/ProfileCreation/Steps.tsx","views/ProfileCreation/index.tsx","state/nftMarket/hooks.ts","hooks/useApproveConfirmTransaction.ts","components/ApproveConfirmButtons.tsx","views/Nft/market/Profile/hooks/useFetchUserNfts.tsx"],"names":["useTeam","id","team","useSelector","state","teams","data","dispatch","useAppDispatch","useEffect","fetchTeam","useTeams","isInitialized","isLoading","fetchTeams","Label","styled","label","isDisabled","Body","div","Children","StyledBackgroundImage","src","SelectionCard","name","value","isChecked","image","onChange","disabled","children","props","isSuccess","mb","checked","e","target","style","flex","baseRandom","require","module","exports","array","size","index","length","lastIndex","undefined","rand","differenceInMilliseconds","dirtyDateLeft","dirtyDateRight","requiredArgs","arguments","dateLeft","toDate","dateRight","getTime","compareAsc","diff","cloneObject","dirtyObject","assign","arrayShuffle","baseShuffle","isArray","collection","copyArray","shuffleSelf","values","differenceInSeconds","Math","floor","ceil","MINT_COST","parseUnits","REGISTER_COST","STARTER_NFT_BUNNY_IDS","totalCost","add","allowance","mul","initialState","currentStep","teamId","selectedNft","collectionAddress","tokenId","userName","minimumCakeRequired","reducer","action","type","step","ProfileCreationContext","createContext","ProfileCreationProvider","useReducer","account","useWeb3React","isSubscribed","a","bunnyFactoryContract","getBunnyFactoryContract","canMint","fetchData","actions","useMemo","nextStep","setTeamId","setSelectedNft","setUserName","Provider","Wrapper","theme","colors","textSubtle","steps","Header","t","useTranslation","useContext","as","scale","color","href","nftsBaseUrl","variant","map","translationKey","WalletNotConnected","ConnectWalletButton","NextStepButton","endIcon","useProfileCreation","Mint","useState","selectedBunnyId","setSelectedBunnyId","starterNfts","setStarterNfts","collections","useGetCollections","toastSuccess","useToast","cakeContract","useCake","useBunnyFactory","useGetCakeBalance","cakeBalance","balance","hasMinimumCakeRequired","fetchStatus","FetchStatus","SUCCESS","gte","callWithGasPrice","useCallWithGasPrice","getStarterNfts","getNftsFromCollectionApi","pancakeBunniesAddress","allPbTokens","nfts","bunnyId","useApproveConfirmTransaction","onRequiresApproval","address","response","onApprove","toString","onConfirm","onApproveSuccess","onSuccess","fetchUserNfts","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","fontSize","bold","num","formatUnits","nft","thumbnail","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","onClick","Link","RouterLink","primary","NftWrapper","ProfilePicture","library","setIsApproved","setIsApproving","useUserNfts","userNftsInitializationState","useFetchUserNfts","toastError","contract","getErc721Contract","getSigner","getPancakeProfileAddress","tx","wait","status","UserNftInitializationState","INITIALIZED","to","marginLeft","filter","walletNft","location","NftLocation","WALLET","spin","Team","currentTeamId","handleTeamSelection","parseInt","teamValues","shuffle","Object","images","md","isJoinable","mr","users","toLocaleString","isLastDayOfMonth","dirtyDate","date","endOfDay","endOfMonth","differenceInMonths","result","sign","difference","abs","differenceInCalendarMonths","getMonth","getDate","setDate","setMonth","isLastMonthNotFull","Number","MINUTES_IN_DAY","MINUTES_IN_MONTH","formatDistance","dirtyBaseDate","options","locale","defaultLocale","RangeError","comparison","isNaN","localizeOptions","addSuffix","Boolean","months","seconds","offsetInSeconds","getTimezoneOffsetInMilliseconds","minutes","round","includeSeconds","hours","days","nearestMonth","monthsSinceStartOfYear","years","ExistingUserState","fetchWithTimeout","url","timeout","fetchOptions","Promise","race","fetch","_","reject","setTimeout","Error","ConfirmProfileCreationModal","onDismiss","profileContract","useProfile","toJSON","receipt","fetchProfile","Toast","txHash","transactionHash","title","justifyContent","InputWrap","Input","UIKitInput","Indicator","Flex","UserName","isAcknowledged","setIsAcknowledged","useWeb3Provider","connector","IDLE","existingUserState","setExistingUserState","isValid","setIsValid","setIsLoading","message","setMessage","fetchAbortSignal","useRef","useModal","onPresentConfirmProfileCreation","isUserCreated","CREATED","usernameToCheck","setUsernameToCheck","debouncedUsernameToCheck","useDebounce","fetchUsernameToCheck","abortSignal","current","API_PROFILE","method","signal","res","ok","json","error","console","abort","AbortController","signMessage","signature","headers","body","JSON","stringify","username","dateCreated","parseISO","created_at","Date","NEW","fetchUser","height","width","event","isWarning","minLength","maxLength","placeholder","py","minHeight","htmlFor","display","cursor","marginBottom","alignItems","ml","mt","Steps","TeamSelection","ProfileCreation","hasProfile","useFetchCollections","PageLoader","toLowerCase","Page","fetchCollections","useFetchCollection","fetchCollection","useFetchByBunnyIdAndUpdate","nftMarket","loadingState","latestPancakeBunniesUpdateAt","isUpdatingPancakeBunnies","existingBunniesInState","useGetAllBunniesByBunnyId","existingTokensWithBunnyId","allPancakeBunnies","useNftsFromCollection","allExistingPBTokenIds","firstBunny","existingMetadata","description","collectionName","fetchMorePancakeBunnies","orderDirection","fetchNewPBAndUpdateExisting","useLoadingState","useGetCollection","checksummedCollectionAddress","isAddress","attributes","marketData","isTradable","useGetNFTInitializationState","initializationState","user","useGetNftFilters","collectionFilter","filters","activeFilters","useGetNftFilterLoadingState","NftFilterLoadingState","useGetNftOrdering","ordering","field","direction","useGetNftShowOnlyOnSale","showOnlyOnSale","useGetNftActivityFilters","activityFilters","typeFilters","approvalState","confirmState","noop","handlePreApprove","then","hasApproveFailed","hasConfirmFailed","logError","params","ButtonArrangement","StyledApproveConfirmButtonRow","mediaQueries","Button","UIKitButton","iconAttrs","ChevronRight","ChevronRightIcon","attrs","ChevronBottom","ChevronDownIcon","spinnerIcon","buttonArrangement","ROW","confirmLabel","confirmId","confirmButtonText","profile","isProfileInitialized","isProfileLoading","hasProfileNft","profileNftTokenId","profileNftCollectionAddress","profileNftWithCollectionAddress","nftLocation","PROFILE","previousProfileNftTokenId","usePreviousValue","shouldFetch","UNINITIALIZED","hasAccountSwitched","isEmpty"],"mappings":"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","file":"static/js/13.8af7d86d.chunk.js","sourcesContent":["import { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { Team } from 'config/constants/types'\r\nimport { State, TeamsState } from '../types'\r\nimport { fetchTeam, fetchTeams } from '.'\r\n\r\nexport const useTeam = (id: number) => {\r\n  const team: Team = useSelector((state: State) => state.teams.data[id])\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeam(id))\r\n  }, [id, dispatch])\r\n\r\n  return team\r\n}\r\n\r\nexport const useTeams = () => {\r\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeams())\r\n  }, [dispatch])\r\n\r\n  return { teams: data, isInitialized, isLoading }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, Radio } from '@pancakeswap/uikit'\r\n\r\ninterface SelectionCardProps {\r\n  name: string\r\n  value: string | number\r\n  isChecked?: boolean\r\n  onChange: (val: any) => void\r\n  image: string\r\n  disabled?: boolean\r\n}\r\n\r\nconst Label = styled.label<{ isDisabled: boolean }>`\r\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\r\n`\r\n\r\nconst Body = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-grow: 1;\r\n  height: 80px;\r\n  padding: 8px 16px;\r\n`\r\n\r\nconst Children = styled.div`\r\n  margin-left: 16px;\r\n`\r\n\r\nconst StyledBackgroundImage = styled.div<{ src: string }>`\r\n  align-self: stretch;\r\n  background-image: url('${({ src }) => src}');\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  flex: none;\r\n  width: 80px;\r\n`\r\n\r\nconst SelectionCard: React.FC<SelectionCardProps> = ({\r\n  name,\r\n  value,\r\n  isChecked = false,\r\n  image,\r\n  onChange,\r\n  disabled,\r\n  children,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Card isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\r\n      <Label isDisabled={disabled}>\r\n        <Body>\r\n          <Radio\r\n            name={name}\r\n            checked={isChecked}\r\n            value={value}\r\n            onChange={(e) => onChange(e.target.value)}\r\n            disabled={disabled}\r\n            style={{ flex: 'none' }}\r\n          />\r\n          <Children>{children}</Children>\r\n        </Body>\r\n        <StyledBackgroundImage src={image} />\r\n      </Label>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SelectionCard\r\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import assign from \"../assign/index.js\";\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import { parseUnits } from '@ethersproject/units'\r\n\r\nexport const MINT_COST = parseUnits('1')\r\nexport const REGISTER_COST = parseUnits('0.5')\r\nexport const ALLOWANCE_MULTIPLIER = 5\r\nexport const STARTER_NFT_BUNNY_IDS = ['5', '6', '7', '8', '9'] // 'sleepy', 'dollop', 'twinkle', 'churro', 'sunny'\r\nexport const USERNAME_MIN_LENGTH = 3\r\nexport const USERNAME_MAX_LENGTH = 15\r\n","import React, { createContext, useEffect, useMemo, useReducer } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBunnyFactoryContract } from 'utils/contractHelpers'\r\nimport { MINT_COST, REGISTER_COST, ALLOWANCE_MULTIPLIER } from '../config'\r\nimport { Actions, State, ContextType } from './types'\r\n\r\nconst totalCost = MINT_COST.add(REGISTER_COST)\r\nconst allowance = totalCost.mul(ALLOWANCE_MULTIPLIER)\r\n\r\nconst initialState: State = {\r\n  isInitialized: false,\r\n  currentStep: 0,\r\n  teamId: null,\r\n  selectedNft: {\r\n    collectionAddress: null,\r\n    tokenId: null,\r\n  },\r\n  userName: '',\r\n  minimumCakeRequired: totalCost,\r\n  allowance,\r\n}\r\n\r\nconst reducer = (state: State, action: Actions): State => {\r\n  switch (action.type) {\r\n    case 'initialize':\r\n      return {\r\n        ...state,\r\n        isInitialized: true,\r\n        currentStep: action.step,\r\n      }\r\n    case 'next_step':\r\n      return {\r\n        ...state,\r\n        currentStep: state.currentStep + 1,\r\n      }\r\n    case 'set_team':\r\n      return {\r\n        ...state,\r\n        teamId: action.teamId,\r\n      }\r\n    case 'set_selected_nft':\r\n      return {\r\n        ...state,\r\n        selectedNft: {\r\n          tokenId: action.tokenId,\r\n          collectionAddress: action.collectionAddress,\r\n        },\r\n      }\r\n    case 'set_username':\r\n      return {\r\n        ...state,\r\n        userName: action.userName,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const ProfileCreationContext = createContext<ContextType>(null)\r\n\r\nconst ProfileCreationProvider: React.FC = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const { account } = useWeb3React()\r\n\r\n  // Initial checks\r\n  useEffect(() => {\r\n    let isSubscribed = true\r\n\r\n    const fetchData = async () => {\r\n      const bunnyFactoryContract = getBunnyFactoryContract()\r\n      const canMint = await bunnyFactoryContract.canMint(account)\r\n      dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\r\n\r\n      // When changing wallets quickly unmounting before the hasClaim finished causes a React error\r\n      if (isSubscribed) {\r\n        dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchData()\r\n    }\r\n\r\n    return () => {\r\n      isSubscribed = false\r\n    }\r\n  }, [account, dispatch])\r\n\r\n  const actions: ContextType['actions'] = useMemo(\r\n    () => ({\r\n      nextStep: () => dispatch({ type: 'next_step' }),\r\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\r\n      setSelectedNft: (tokenId: string, collectionAddress: string) =>\r\n        dispatch({ type: 'set_selected_nft', tokenId, collectionAddress }),\r\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\r\n    }),\r\n    [dispatch],\r\n  )\r\n\r\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\r\n}\r\n\r\nexport default ProfileCreationProvider\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Breadcrumbs, Heading, Text, Link, Button } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\n\r\nconst Wrapper = styled.div`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-top: 32px;\r\n  margin-bottom: 24px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nconst steps = ['Get Starter Collectible', 'Set Profile Picture', 'Join Team', 'Set Name']\r\n\r\nconst Header: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const { currentStep } = useContext(ProfileCreationContext)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"8px\" id=\"profile-setup-title\">\r\n        {t('Profile Setup')}\r\n      </Heading>\r\n      <Heading as=\"h2\" scale=\"lg\" mb=\"8px\">\r\n        {t('Show off your stats and collectibles with your unique profile')}\r\n      </Heading>\r\n      <Text color=\"textSubtle\" mb=\"8px\">\r\n        {t('Total cost: 1.5 CAKE')}\r\n      </Text>\r\n      <Link href={`${nftsBaseUrl}/profile`}>\r\n        <Button mb=\"24px\" scale=\"sm\" variant=\"secondary\">\r\n          {t('Back to profile')}\r\n        </Button>\r\n      </Link>\r\n      <Breadcrumbs>\r\n        {steps.map((translationKey, index) => {\r\n          return (\r\n            <Text key={translationKey} color={index <= currentStep ? 'text' : 'textDisabled'}>\r\n              {t(translationKey)}\r\n            </Text>\r\n          )\r\n        })}\r\n      </Breadcrumbs>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Heading, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\n\r\nconst WalletNotConnected = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <div>\r\n      <Heading scale=\"xl\" mb=\"8px\">\r\n        {t('Oops!')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"16px\">\r\n        {t('Please connect your wallet to continue')}\r\n      </Text>\r\n      <ConnectWalletButton />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WalletNotConnected\r\n","import React from 'react'\r\nimport { ArrowForwardIcon, Button, ButtonProps } from '@pancakeswap/uikit'\r\n\r\nconst NextStepButton: React.FC<ButtonProps> = (props) => {\r\n  return <Button endIcon={<ArrowForwardIcon color=\"currentColor\" />} {...props} />\r\n}\r\n\r\nexport default NextStepButton\r\n","import { useContext } from 'react'\r\nimport { ProfileCreationContext } from './ProfileCreationProvider'\r\n\r\nconst useProfileCreation = () => {\r\n  return useContext(ProfileCreationContext)\r\n}\r\n\r\nexport default useProfileCreation\r\n","import React, { useState, useEffect } from 'react'\r\nimport { formatUnits } from '@ethersproject/units'\r\nimport { Card, CardBody, Heading, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { useCake, useBunnyFactory } from 'hooks/useContract'\r\nimport { FetchStatus, useGetCakeBalance } from 'hooks/useTokenBalance'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport ApproveConfirmButtons from 'components/ApproveConfirmButtons'\r\nimport useToast from 'hooks/useToast'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchUserNfts } from 'state/nftMarket/reducer'\r\nimport { useGetCollections } from 'state/nftMarket/hooks'\r\nimport { getNftsFromCollectionApi } from 'state/nftMarket/helpers'\r\nimport { ApiSingleTokenData } from 'state/nftMarket/types'\r\nimport { pancakeBunniesAddress } from 'views/Nft/market/constants'\r\nimport SelectionCard from './SelectionCard'\r\nimport NextStepButton from './NextStepButton'\r\nimport useProfileCreation from './contexts/hook'\r\nimport { MINT_COST, STARTER_NFT_BUNNY_IDS } from './config'\r\n\r\ninterface MintNftData extends ApiSingleTokenData {\r\n  bunnyId?: string\r\n}\r\n\r\nconst Mint: React.FC = () => {\r\n  const [selectedBunnyId, setSelectedBunnyId] = useState<string>('')\r\n  const [starterNfts, setStarterNfts] = useState<MintNftData[]>([])\r\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\r\n  const collections = useGetCollections()\r\n  const { toastSuccess } = useToast()\r\n  const dispatch = useAppDispatch()\r\n\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const bunnyFactoryContract = useBunnyFactory()\r\n  const { t } = useTranslation()\r\n  const { balance: cakeBalance, fetchStatus } = useGetCakeBalance()\r\n  const hasMinimumCakeRequired = fetchStatus === FetchStatus.SUCCESS && cakeBalance.gte(MINT_COST)\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n\r\n  useEffect(() => {\r\n    const getStarterNfts = async () => {\r\n      const { data: allPbTokens } = await getNftsFromCollectionApi(pancakeBunniesAddress)\r\n      const nfts = STARTER_NFT_BUNNY_IDS.map((bunnyId) => {\r\n        if (allPbTokens && allPbTokens[bunnyId]) {\r\n          return { ...allPbTokens[bunnyId], bunnyId }\r\n        }\r\n        return undefined\r\n      })\r\n      setStarterNfts(nfts)\r\n    }\r\n    if (starterNfts.length === 0) {\r\n      getStarterNfts()\r\n    }\r\n  }, [starterNfts])\r\n\r\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\r\n    useApproveConfirmTransaction({\r\n      onRequiresApproval: async () => {\r\n        // TODO: Move this to a helper, this check will be probably be used many times\r\n        try {\r\n          const response = await cakeContract.allowance(account, bunnyFactoryContract.address)\r\n          return response.gte(minimumCakeRequired)\r\n        } catch (error) {\r\n          return false\r\n        }\r\n      },\r\n      onApprove: () => {\r\n        return callWithGasPrice(cakeContract, 'approve', [bunnyFactoryContract.address, allowance.toString()])\r\n      },\r\n      onConfirm: () => {\r\n        return callWithGasPrice(bunnyFactoryContract, 'mintNFT', [selectedBunnyId])\r\n      },\r\n      onApproveSuccess: () => {\r\n        toastSuccess(t('Enabled'), t(\"Press 'confirm' to mint this NFT\"))\r\n      },\r\n      onSuccess: () => {\r\n        toastSuccess(t('Success'), t('You have minted your starter NFT'))\r\n        dispatch(fetchUserNfts({ account, collections }))\r\n        actions.nextStep()\r\n      },\r\n    })\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 1 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Get Starter Collectible')}\r\n      </Heading>\r\n      <Text as=\"p\">{t('Every profile starts by making a “starter” collectible (NFT).')}</Text>\r\n      <Text as=\"p\">{t('This starter will also become your first profile picture.')}</Text>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {t('You can change your profile pic later if you get another approved Pancake Collectible.')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Choose your Starter!')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\">\r\n            {t('Choose wisely: you can only ever make one starter collectible!')}\r\n          </Text>\r\n          <Text as=\"p\" mb=\"24px\" color=\"textSubtle\">\r\n            {t('Cost: %num% CAKE', { num: formatUnits(MINT_COST) })}\r\n          </Text>\r\n          {starterNfts.map((nft) => {\r\n            const handleChange = (value: string) => setSelectedBunnyId(value)\r\n\r\n            return (\r\n              <SelectionCard\r\n                key={nft?.name}\r\n                name=\"mintStarter\"\r\n                value={nft?.bunnyId}\r\n                image={nft?.image.thumbnail}\r\n                isChecked={selectedBunnyId === nft?.bunnyId}\r\n                onChange={handleChange}\r\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\r\n              >\r\n                <Text bold>{nft?.name}</Text>\r\n              </SelectionCard>\r\n            )\r\n          })}\r\n          {!hasMinimumCakeRequired && (\r\n            <Text color=\"failure\" mb=\"16px\">\r\n              {t('A minimum of %num% CAKE is required', { num: formatUnits(MINT_COST) })}\r\n            </Text>\r\n          )}\r\n          <ApproveConfirmButtons\r\n            isApproveDisabled={selectedBunnyId === null || isConfirmed || isConfirming || isApproved}\r\n            isApproving={isApproving}\r\n            isConfirmDisabled={!isApproved || isConfirmed || !hasMinimumCakeRequired}\r\n            isConfirming={isConfirming}\r\n            onApprove={handleApprove}\r\n            onConfirm={handleConfirm}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\r\n        {t('Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Mint\r\n","import React, { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { getErc721Contract } from 'utils/contractHelpers'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useUserNfts } from 'state/nftMarket/hooks'\r\nimport useToast from 'hooks/useToast'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport useFetchUserNfts from 'views/Nft/market/Profile/hooks/useFetchUserNfts'\r\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\r\nimport { NftLocation, UserNftInitializationState } from 'state/nftMarket/types'\r\nimport SelectionCard from './SelectionCard'\r\nimport NextStepButton from './NextStepButton'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\n\r\nconst Link = styled(RouterLink)`\r\n  color: ${({ theme }) => theme.colors.primary};\r\n`\r\n\r\nconst NftWrapper = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst ProfilePicture: React.FC = () => {\r\n  const { library } = useWeb3React()\r\n  const [isApproved, setIsApproved] = useState(false)\r\n  const [isApproving, setIsApproving] = useState(false)\r\n  const { selectedNft, actions } = useContext(ProfileCreationContext)\r\n\r\n  const { nfts, userNftsInitializationState } = useUserNfts()\r\n  useFetchUserNfts()\r\n\r\n  const { t } = useTranslation()\r\n  const { toastError, toastSuccess } = useToast()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n\r\n  const handleApprove = async () => {\r\n    const contract = getErc721Contract(selectedNft.collectionAddress, library.getSigner())\r\n    const tx = await callWithGasPrice(contract, 'approve', [getPancakeProfileAddress(), selectedNft.tokenId])\r\n    setIsApproving(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      toastSuccess(t('Enabled'), t('Please progress to the next step.'))\r\n      setIsApproving(false)\r\n      setIsApproved(true)\r\n    } else {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setIsApproving(false)\r\n    }\r\n  }\r\n\r\n  if (nfts.length === 0 && userNftsInitializationState === UserNftInitializationState.INITIALIZED) {\r\n    return (\r\n      <>\r\n        <Heading scale=\"xl\" mb=\"24px\">\r\n          {t('Oops!')}\r\n        </Heading>\r\n        <Text bold fontSize=\"20px\" mb=\"24px\">\r\n          {t('We couldn’t find any Pancake Collectibles in your wallet.')}\r\n        </Text>\r\n        <Text as=\"p\">\r\n          {t(\r\n            'You need a Pancake Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\r\n          )}\r\n        </Text>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 2 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Set Profile Picture')}\r\n      </Heading>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Choose collectible')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\">\r\n            {t('Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.')}\r\n          </Text>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t('Only approved Pancake Collectibles can be used.')}\r\n            <Link to={`${nftsBaseUrl}/collections`} style={{ marginLeft: '4px' }}>\r\n              {t('See the list >')}\r\n            </Link>\r\n          </Text>\r\n          <NftWrapper>\r\n            {nfts\r\n              .filter((walletNft) => walletNft.location === NftLocation.WALLET)\r\n              .map((walletNft) => {\r\n                return (\r\n                  <SelectionCard\r\n                    name=\"profilePicture\"\r\n                    key={`${walletNft.collectionAddress}#${walletNft.tokenId}`}\r\n                    value={walletNft.tokenId}\r\n                    image={walletNft.image.thumbnail}\r\n                    isChecked={walletNft.tokenId === selectedNft.tokenId}\r\n                    onChange={(value: string) => actions.setSelectedNft(value, walletNft.collectionAddress)}\r\n                  >\r\n                    <Text bold>{walletNft.name}</Text>\r\n                  </SelectionCard>\r\n                )\r\n              })}\r\n          </NftWrapper>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Allow collectible to be locked')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\r\n            {t(\r\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\r\n            )}\r\n          </Text>\r\n          <Button\r\n            isLoading={isApproving}\r\n            disabled={isApproved || isApproving || selectedNft.tokenId === null}\r\n            onClick={handleApprove}\r\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\r\n            id=\"approveStarterCollectible\"\r\n          >\r\n            {t('Enable')}\r\n          </Button>\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={selectedNft.tokenId === null || !isApproved || isApproving}>\r\n        {t('Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfilePicture\r\n","import React, { useMemo } from 'react'\r\nimport { Card, CardBody, CommunityIcon, Flex, Heading, Text } from '@pancakeswap/uikit'\r\nimport shuffle from 'lodash/shuffle'\r\nimport { useTeams } from 'state/teams/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport SelectionCard from './SelectionCard'\r\nimport NextStepButton from './NextStepButton'\r\nimport useProfileCreation from './contexts/hook'\r\n\r\nconst Team: React.FC = () => {\r\n  const { teamId: currentTeamId, actions } = useProfileCreation()\r\n  const { t } = useTranslation()\r\n  const { teams } = useTeams()\r\n  const handleTeamSelection = (value: string) => actions.setTeamId(parseInt(value, 10))\r\n  const teamValues = useMemo(() => shuffle(Object.values(teams)), [teams])\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 3 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Join a Team')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {t('It won’t be possible to undo the choice you make for the foreseeable future!')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Join a Team')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t(\r\n              'There’s currently no big difference between teams, and no benefit of joining one team over another for now. So pick whichever one you like!',\r\n            )}\r\n          </Text>\r\n          {teamValues &&\r\n            teamValues.map((team) => {\r\n              return (\r\n                <SelectionCard\r\n                  key={team.name}\r\n                  name=\"teams-selection\"\r\n                  value={team.id}\r\n                  isChecked={currentTeamId === team.id}\r\n                  image={`/images/teams/${team.images.md}`}\r\n                  onChange={handleTeamSelection}\r\n                  disabled={!team.isJoinable}\r\n                >\r\n                  <Text bold>{team.name}</Text>\r\n                  <Flex>\r\n                    <CommunityIcon mr=\"8px\" />\r\n                    <Text>{team.users.toLocaleString()}</Text>\r\n                  </Flex>\r\n                </SelectionCard>\r\n              )\r\n            })}\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={currentTeamId === null}>\r\n        {t('Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Team\r\n","import toDate from \"../toDate/index.js\";\nimport endOfDay from \"../endOfDay/index.js\";\nimport endOfMonth from \"../endOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * var result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\n\nexport default function isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarMonths from \"../differenceInCalendarMonths/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport isLastDayOfMonth from \"../isLastDayOfMonth/index.js\";\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  var result; // Check for the difference of less than month\n\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n\n    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month\n\n    if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  } // Prevent negative zero\n\n\n  return result === 0 ? 0 : result;\n}","import compareAsc from \"../compareAsc/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import React, { ChangeEvent, useEffect, useRef, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Heading,\r\n  Text,\r\n  Input as UIKitInput,\r\n  Button,\r\n  AutoRenewIcon,\r\n  CheckmarkIcon,\r\n  Flex,\r\n  WarningIcon,\r\n  useModal,\r\n  Skeleton,\r\n  Checkbox,\r\n} from '@pancakeswap/uikit'\r\nimport { parseISO, formatDistance } from 'date-fns'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { formatUnits } from '@ethersproject/units'\r\nimport { API_PROFILE } from 'config/constants/endpoints'\r\nimport useToast from 'hooks/useToast'\r\nimport { FetchStatus, useGetCakeBalance } from 'hooks/useTokenBalance'\r\nimport { signMessage } from 'utils/web3React'\r\nimport fetchWithTimeout from 'utils/fetchWithTimeout'\r\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ConfirmProfileCreationModal from './ConfirmProfileCreationModal'\r\nimport useProfileCreation from './contexts/hook'\r\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\r\nimport useDebounce from '../../hooks/useDebounce'\r\n\r\nenum ExistingUserState {\r\n  IDLE = 'idle', // initial state\r\n  CREATED = 'created', // username has already been created\r\n  NEW = 'new', // username has not been created\r\n}\r\n\r\nconst InputWrap = styled.div`\r\n  position: relative;\r\n  max-width: 240px;\r\n`\r\n\r\nconst Input = styled(UIKitInput)`\r\n  padding-right: 40px;\r\n`\r\n\r\nconst Indicator = styled(Flex)`\r\n  align-items: center;\r\n  height: 24px;\r\n  justify-content: center;\r\n  margin-top: -12px;\r\n  position: absolute;\r\n  right: 16px;\r\n  top: 50%;\r\n  width: 24px;\r\n`\r\n\r\nconst UserName: React.FC = () => {\r\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\r\n  const { teamId, selectedNft, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { toastError } = useToast()\r\n  const { library, connector } = useWeb3Provider()\r\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\r\n  const [isValid, setIsValid] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const fetchAbortSignal = useRef<AbortController>(null)\r\n  const { balance: cakeBalance, fetchStatus } = useGetCakeBalance()\r\n  const hasMinimumCakeRequired = fetchStatus === FetchStatus.SUCCESS && cakeBalance.gte(REGISTER_COST)\r\n  const [onPresentConfirmProfileCreation] = useModal(\r\n    <ConfirmProfileCreationModal\r\n      userName={userName}\r\n      selectedNft={selectedNft}\r\n      account={account}\r\n      teamId={teamId}\r\n      minimumCakeRequired={minimumCakeRequired}\r\n      allowance={allowance}\r\n    />,\r\n    false,\r\n  )\r\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\r\n\r\n  const [usernameToCheck, setUsernameToCheck] = useState<string>(undefined)\r\n  const debouncedUsernameToCheck = useDebounce(usernameToCheck, 200)\r\n\r\n  useEffect(() => {\r\n    const fetchUsernameToCheck = async (abortSignal) => {\r\n      try {\r\n        setIsLoading(true)\r\n        if (!debouncedUsernameToCheck) {\r\n          setIsValid(false)\r\n          setMessage('')\r\n          fetchAbortSignal.current = null\r\n        } else {\r\n          const res = await fetchWithTimeout(`${API_PROFILE}/api/users/valid/${debouncedUsernameToCheck}`, {\r\n            method: 'get',\r\n            signal: abortSignal,\r\n            timeout: 30000,\r\n          })\r\n\r\n          fetchAbortSignal.current = null\r\n\r\n          if (res.ok) {\r\n            setIsValid(true)\r\n            setMessage('')\r\n          } else {\r\n            const data = await res.json()\r\n            setIsValid(false)\r\n            setMessage(data?.error?.message)\r\n          }\r\n        }\r\n      } catch (e) {\r\n        setIsValid(false)\r\n        if (e.name !== 'AbortError') {\r\n          setMessage(t('Error fetching data'))\r\n          console.error(e)\r\n        }\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n\r\n    if (fetchAbortSignal.current) {\r\n      fetchAbortSignal.current.abort()\r\n    }\r\n\r\n    fetchAbortSignal.current = new AbortController()\r\n\r\n    fetchUsernameToCheck(fetchAbortSignal.current.signal)\r\n  }, [debouncedUsernameToCheck, t])\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target\r\n    actions.setUserName(value)\r\n    setUsernameToCheck(value)\r\n  }\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n\r\n      const signature = await signMessage(connector, library, account, userName)\r\n      const response = await fetch(`${API_PROFILE}/api/users/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          address: account,\r\n          username: userName,\r\n          signature,\r\n        }),\r\n      })\r\n\r\n      if (response.ok) {\r\n        setExistingUserState(ExistingUserState.CREATED)\r\n      } else {\r\n        const data = await response.json()\r\n        toastError(t('Error'), data?.error?.message)\r\n      }\r\n    } catch (error) {\r\n      toastError(error?.message ? error.message : JSON.stringify(error))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleAcknowledge = () => setIsAcknowledged(!isAcknowledged)\r\n\r\n  // Perform an initial check to see if the wallet has already created a username\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const response = await fetch(`${API_PROFILE}/api/users/${account}`)\r\n        const data = await response.json()\r\n\r\n        if (response.ok) {\r\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\r\n          setMessage(t('Created %dateCreated% ago', { dateCreated }))\r\n\r\n          actions.setUserName(data.username)\r\n          setExistingUserState(ExistingUserState.CREATED)\r\n          setIsValid(true)\r\n        } else {\r\n          setExistingUserState(ExistingUserState.NEW)\r\n        }\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Unable to verify username'))\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchUser()\r\n    }\r\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError, t])\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 4 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Set Your Name')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {t('This name will be shown in team leaderboards and search results as long as your profile is active.')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Set Your Name')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t(\r\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You can’t change this once you click Confirm.',\r\n            )}\r\n          </Text>\r\n          {existingUserState === ExistingUserState.IDLE ? (\r\n            <Skeleton height=\"40px\" width=\"240px\" />\r\n          ) : (\r\n            <InputWrap>\r\n              <Input\r\n                onChange={handleChange}\r\n                isWarning={userName && !isValid}\r\n                isSuccess={userName && isValid}\r\n                minLength={USERNAME_MIN_LENGTH}\r\n                maxLength={USERNAME_MAX_LENGTH}\r\n                disabled={isUserCreated}\r\n                placeholder={t('Enter your name...')}\r\n                value={userName}\r\n              />\r\n              <Indicator>\r\n                {isLoading && <AutoRenewIcon spin />}\r\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\r\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\r\n              </Indicator>\r\n            </InputWrap>\r\n          )}\r\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\r\n            {message}\r\n          </Text>\r\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\r\n            {t(\r\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\r\n            )}\r\n          </Text>\r\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\r\n            <Flex alignItems=\"center\">\r\n              <div style={{ flex: 'none' }}>\r\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknowledge} />\r\n              </div>\r\n              <Text ml=\"8px\">{t('I understand that people can view my wallet if they know my username')}</Text>\r\n            </Flex>\r\n          </label>\r\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\r\n            {t('Confirm')}\r\n          </Button>\r\n        </CardBody>\r\n      </Card>\r\n      <Button\r\n        onClick={onPresentConfirmProfileCreation}\r\n        disabled={!isValid || !isUserCreated}\r\n        id=\"completeProfileCreation\"\r\n      >\r\n        {t('Complete Profile')}\r\n      </Button>\r\n      {!hasMinimumCakeRequired && (\r\n        <Text color=\"failure\" mt=\"16px\">\r\n          {t('A minimum of %num% CAKE is required', { num: formatUnits(REGISTER_COST) })}\r\n        </Text>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserName\r\n","interface FetchTimeoutOptions extends RequestInit {\r\n  timeout?: number\r\n}\r\n\r\nconst fetchWithTimeout = (url, options: FetchTimeoutOptions = {}): Promise<Response> => {\r\n  const { timeout = 10000, ...fetchOptions } = options\r\n\r\n  return Promise.race([\r\n    fetch(url, fetchOptions),\r\n    new Promise((_, reject) => {\r\n      setTimeout(() => {\r\n        reject(new Error(`Request for ${url} timed out after ${timeout} milliseconds`))\r\n      }, timeout)\r\n    }),\r\n  ]) as Promise<Response>\r\n}\r\n\r\nexport default fetchWithTimeout\r\n","import React from 'react'\r\nimport { Modal, Flex, Text } from '@pancakeswap/uikit'\r\nimport { ethers } from 'ethers'\r\nimport { formatUnits } from '@ethersproject/units'\r\nimport { useAppDispatch } from 'state'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCake, useProfile } from 'hooks/useContract'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { fetchProfile } from 'state/profile'\r\nimport useToast from 'hooks/useToast'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport { ToastDescriptionWithTx } from 'components/Toast'\r\nimport ApproveConfirmButtons from 'components/ApproveConfirmButtons'\r\nimport { REGISTER_COST } from './config'\r\nimport { State } from './contexts/types'\r\n\r\ninterface Props {\r\n  userName: string\r\n  selectedNft: State['selectedNft']\r\n  account: string\r\n  teamId: number\r\n  minimumCakeRequired: ethers.BigNumber\r\n  allowance: ethers.BigNumber\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\r\n  account,\r\n  teamId,\r\n  selectedNft,\r\n  minimumCakeRequired,\r\n  allowance,\r\n  onDismiss,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const profileContract = useProfile()\r\n  const dispatch = useAppDispatch()\r\n  const { toastSuccess } = useToast()\r\n  const cakeContract = useCake()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n\r\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\r\n    useApproveConfirmTransaction({\r\n      onRequiresApproval: async () => {\r\n        try {\r\n          const response = await cakeContract.allowance(account, profileContract.address)\r\n          return response.gte(minimumCakeRequired)\r\n        } catch (error) {\r\n          return false\r\n        }\r\n      },\r\n      onApprove: () => {\r\n        return callWithGasPrice(cakeContract, 'approve', [profileContract.address, allowance.toJSON()])\r\n      },\r\n      onConfirm: () => {\r\n        return callWithGasPrice(profileContract, 'createProfile', [\r\n          teamId,\r\n          selectedNft.collectionAddress,\r\n          selectedNft.tokenId,\r\n        ])\r\n      },\r\n      onSuccess: async ({ receipt }) => {\r\n        await dispatch(fetchProfile(account))\r\n        onDismiss()\r\n        toastSuccess(t('Profile created!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\r\n      },\r\n    })\r\n\r\n  return (\r\n    <Modal title={t('Complete Profile')} onDismiss={onDismiss}>\r\n      <Text color=\"textSubtle\" mb=\"8px\">\r\n        {t('Submitting NFT to contract and confirming User Name and Team.')}\r\n      </Text>\r\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\r\n        <Text>{t('Cost')}</Text>\r\n        <Text>{t('%num% CAKE', { num: formatUnits(REGISTER_COST) })}</Text>\r\n      </Flex>\r\n      <ApproveConfirmButtons\r\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\r\n        isApproving={isApproving}\r\n        isConfirmDisabled={!isApproved || isConfirmed}\r\n        isConfirming={isConfirming}\r\n        onApprove={handleApprove}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ConfirmProfileCreationModal\r\n","import React, { useContext } from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport NoWalletConnected from './WalletNotConnected'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\nimport Mint from './Mint'\r\nimport ProfilePicture from './ProfilePicture'\r\nimport TeamSelection from './TeamSelection'\r\nimport UserName from './UserName'\r\n\r\nconst Steps = () => {\r\n  const { t } = useTranslation()\r\n  const { isInitialized, currentStep } = useContext(ProfileCreationContext)\r\n  const { account } = useWeb3React()\r\n\r\n  if (!account) {\r\n    return <NoWalletConnected />\r\n  }\r\n\r\n  if (!isInitialized) {\r\n    return <div>{t('Loading...')}</div>\r\n  }\r\n\r\n  if (currentStep === 0) {\r\n    return <Mint />\r\n  }\r\n\r\n  if (currentStep === 1) {\r\n    return <ProfilePicture />\r\n  }\r\n\r\n  if (currentStep === 2) {\r\n    return <TeamSelection />\r\n  }\r\n\r\n  if (currentStep === 3) {\r\n    return <UserName />\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport default Steps\r\n","import React from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Redirect } from 'react-router'\r\nimport Page from 'components/Layout/Page'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport PageLoader from 'components/Loader/PageLoader'\r\nimport useFetchUserNfts from 'views/Nft/market/Profile/hooks/useFetchUserNfts'\r\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\r\nimport { useFetchCollections } from 'state/nftMarket/hooks'\r\nimport Header from './Header'\r\nimport ProfileCreationProvider from './contexts/ProfileCreationProvider'\r\nimport Steps from './Steps'\r\n\r\nconst ProfileCreation = () => {\r\n  const { account } = useWeb3React()\r\n  const { isInitialized, isLoading, hasProfile } = useProfile()\r\n\r\n  useFetchUserNfts()\r\n  useFetchCollections()\r\n\r\n  if (!isInitialized || isLoading) {\r\n    return <PageLoader />\r\n  }\r\n\r\n  if (account && hasProfile) {\r\n    return <Redirect to={`${nftsBaseUrl}/profile/${account.toLowerCase()}`} />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ProfileCreationProvider>\r\n        <Page>\r\n          <Header />\r\n          <Steps />\r\n        </Page>\r\n      </ProfileCreationProvider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfileCreation\r\n","import { useEffect, useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { pancakeBunniesAddress } from 'views/Nft/market/constants'\r\nimport { isAddress } from 'utils'\r\nimport { fetchCollection, fetchCollections, fetchNewPBAndUpdateExisting } from './reducer'\r\nimport { State } from '../types'\r\nimport { NftActivityFilter, NftFilter, NftFilterLoadingState, NftToken, UserNftsState } from './types'\r\n\r\nconst MAX_GEN0_ID = 4\r\n\r\nexport const useFetchCollections = () => {\r\n  const dispatch = useAppDispatch()\r\n  useEffect(() => {\r\n    dispatch(fetchCollections())\r\n  }, [dispatch])\r\n}\r\n\r\nexport const useFetchCollection = (collectionAddress: string) => {\r\n  const dispatch = useAppDispatch()\r\n  useEffect(() => {\r\n    dispatch(fetchCollection(collectionAddress))\r\n  }, [dispatch, collectionAddress])\r\n}\r\n\r\n// Returns a function that fetches more NFTs for specified bunny id\r\n// as well as updating existing PB NFTs in state\r\n// Note: PancakeBunny specific\r\nexport const useFetchByBunnyIdAndUpdate = (bunnyId: string) => {\r\n  const dispatch = useAppDispatch()\r\n\r\n  const { latestPancakeBunniesUpdateAt, isUpdatingPancakeBunnies } = useSelector(\r\n    (state: State) => state.nftMarket.data.loadingState,\r\n  )\r\n\r\n  // Extra guard in case market data shifts\r\n  // we don't wanna fetch same tokens multiple times\r\n  const existingBunniesInState = useGetAllBunniesByBunnyId(bunnyId)\r\n  const existingTokensWithBunnyId = existingBunniesInState ? existingBunniesInState.map((nft) => nft.tokenId) : []\r\n\r\n  const allPancakeBunnies = useNftsFromCollection(pancakeBunniesAddress)\r\n  const allExistingPBTokenIds = allPancakeBunnies ? allPancakeBunnies.map((nft) => nft.tokenId) : []\r\n\r\n  const firstBunny = existingBunniesInState.length > 0 ? existingBunniesInState[0] : null\r\n\r\n  // If we already have NFT with this bunny id in state - we can reuse its metadata without making API request\r\n  const existingMetadata = useMemo(() => {\r\n    return firstBunny\r\n      ? {\r\n          name: firstBunny.name,\r\n          description: firstBunny.description,\r\n          collection: { name: firstBunny.collectionName },\r\n          image: firstBunny.image,\r\n        }\r\n      : null\r\n  }, [firstBunny])\r\n\r\n  // This fetches more bunnies when called\r\n  const fetchMorePancakeBunnies = (orderDirection: 'asc' | 'desc') => {\r\n    dispatch(\r\n      fetchNewPBAndUpdateExisting({\r\n        bunnyId,\r\n        existingTokensWithBunnyId,\r\n        allExistingPBTokenIds,\r\n        existingMetadata,\r\n        orderDirection,\r\n      }),\r\n    )\r\n  }\r\n\r\n  return { isUpdatingPancakeBunnies, latestPancakeBunniesUpdateAt, fetchMorePancakeBunnies }\r\n}\r\n\r\nexport const useLoadingState = () => {\r\n  return useSelector((state: State) => state.nftMarket.data.loadingState)\r\n}\r\n\r\nexport const useGetCollections = () => {\r\n  return useSelector((state: State) => state.nftMarket.data.collections)\r\n}\r\n\r\nexport const useGetCollection = (collectionAddress: string) => {\r\n  const checksummedCollectionAddress = isAddress(collectionAddress) || ''\r\n  const collections = useGetCollections()\r\n  return collections[checksummedCollectionAddress]\r\n}\r\n\r\nexport const useNftsFromCollection = (collectionAddress: string) => {\r\n  const checksummedCollectionAddress = isAddress(collectionAddress) || ''\r\n  const nfts: NftToken[] = useSelector((state: State) => state.nftMarket.data.nfts[checksummedCollectionAddress])\r\n  return nfts\r\n}\r\n\r\nexport const useGetAllBunniesByBunnyId = (bunnyId: string) => {\r\n  const nfts: NftToken[] = useSelector((state: State) => state.nftMarket.data.nfts[pancakeBunniesAddress])\r\n  return nfts ? nfts.filter((nft) => nft.attributes[0].value === bunnyId && nft.marketData.isTradable) : []\r\n}\r\n\r\nexport const useGetNFTInitializationState = () => {\r\n  return useSelector((state: State) => state.nftMarket.initializationState)\r\n}\r\n\r\nexport const useUserNfts = (): UserNftsState => {\r\n  return useSelector((state: State) => state.nftMarket.data.user)\r\n}\r\n\r\nexport const useHasGen0Nfts = (): boolean => {\r\n  const userNfts = useSelector((state: State) => state.nftMarket.data.user)\r\n  return userNfts.nfts.some((nft) => nft.attributes && Number(nft.attributes[0]?.value) <= MAX_GEN0_ID)\r\n}\r\n\r\nexport const useGetNftFilters = (collectionAddress: string) => {\r\n  const collectionFilter: NftFilter = useSelector((state: State) => state.nftMarket.data.filters[collectionAddress])\r\n  return collectionFilter ? collectionFilter.activeFilters : {}\r\n}\r\n\r\nexport const useGetNftFilterLoadingState = (collectionAddress: string) => {\r\n  const collectionFilter: NftFilter = useSelector((state: State) => state.nftMarket.data.filters[collectionAddress])\r\n  return collectionFilter ? collectionFilter.loadingState : NftFilterLoadingState.IDLE\r\n}\r\n\r\nexport const useGetNftOrdering = (collectionAddress: string) => {\r\n  const collectionFilter: NftFilter = useSelector((state: State) => state.nftMarket.data.filters[collectionAddress])\r\n  return collectionFilter ? collectionFilter.ordering : { field: 'currentAskPrice', direction: 'asc' as 'asc' | 'desc' }\r\n}\r\n\r\nexport const useGetNftShowOnlyOnSale = (collectionAddress: string) => {\r\n  const collectionFilter: NftFilter = useSelector((state: State) => state.nftMarket.data.filters[collectionAddress])\r\n  return collectionFilter ? collectionFilter.showOnlyOnSale : true\r\n}\r\n\r\nexport const useGetNftActivityFilters = (collectionAddress: string) => {\r\n  const collectionFilter: NftActivityFilter = useSelector(\r\n    (state: State) => state.nftMarket.data.activityFilters[collectionAddress],\r\n  )\r\n  return collectionFilter || { typeFilters: [] }\r\n}\r\n","import { useEffect, useReducer, useRef } from 'react'\r\nimport { noop } from 'lodash'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { ethers } from 'ethers'\r\nimport useToast from 'hooks/useToast'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { logError } from 'utils/sentry'\r\n\r\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\r\n\r\ntype Action =\r\n  | { type: 'requires_approval' }\r\n  | { type: 'approve_sending' }\r\n  | { type: 'approve_receipt' }\r\n  | { type: 'approve_error' }\r\n  | { type: 'confirm_sending' }\r\n  | { type: 'confirm_receipt' }\r\n  | { type: 'confirm_error' }\r\n\r\ninterface State {\r\n  approvalState: LoadingState\r\n  confirmState: LoadingState\r\n}\r\n\r\nconst initialState: State = {\r\n  approvalState: 'idle',\r\n  confirmState: 'idle',\r\n}\r\n\r\nconst reducer = (state: State, actions: Action): State => {\r\n  switch (actions.type) {\r\n    case 'requires_approval':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n      }\r\n    case 'approve_sending':\r\n      return {\r\n        ...state,\r\n        approvalState: 'loading',\r\n      }\r\n    case 'approve_receipt':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n      }\r\n    case 'approve_error':\r\n      return {\r\n        ...state,\r\n        approvalState: 'fail',\r\n      }\r\n    case 'confirm_sending':\r\n      return {\r\n        ...state,\r\n        confirmState: 'loading',\r\n      }\r\n    case 'confirm_receipt':\r\n      return {\r\n        ...state,\r\n        confirmState: 'success',\r\n      }\r\n    case 'confirm_error':\r\n      return {\r\n        ...state,\r\n        confirmState: 'fail',\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\ninterface OnSuccessProps {\r\n  state: State\r\n  receipt: ethers.providers.TransactionReceipt\r\n}\r\n\r\ninterface ApproveConfirmTransaction {\r\n  onApprove: () => Promise<ethers.providers.TransactionResponse>\r\n  onConfirm: (params?) => Promise<ethers.providers.TransactionResponse>\r\n  onRequiresApproval?: () => Promise<boolean>\r\n  onSuccess: ({ state, receipt }: OnSuccessProps) => void\r\n  onApproveSuccess?: ({ state, receipt }: OnSuccessProps) => void\r\n}\r\n\r\nconst useApproveConfirmTransaction = ({\r\n  onApprove,\r\n  onConfirm,\r\n  onRequiresApproval,\r\n  onSuccess = noop,\r\n  onApproveSuccess = noop,\r\n}: ApproveConfirmTransaction) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const handlePreApprove = useRef(onRequiresApproval)\r\n  const { toastError } = useToast()\r\n\r\n  // Check if approval is necessary, re-check if account changes\r\n  useEffect(() => {\r\n    if (account && handlePreApprove.current) {\r\n      handlePreApprove.current().then((result) => {\r\n        if (result) {\r\n          dispatch({ type: 'requires_approval' })\r\n        }\r\n      })\r\n    }\r\n  }, [account, handlePreApprove, dispatch])\r\n\r\n  return {\r\n    isApproving: state.approvalState === 'loading',\r\n    isApproved: state.approvalState === 'success',\r\n    isConfirming: state.confirmState === 'loading',\r\n    isConfirmed: state.confirmState === 'success',\r\n    hasApproveFailed: state.approvalState === 'fail',\r\n    hasConfirmFailed: state.confirmState === 'fail',\r\n    handleApprove: async () => {\r\n      try {\r\n        const tx = await onApprove()\r\n        dispatch({ type: 'approve_sending' })\r\n        const receipt = await tx.wait()\r\n        if (receipt.status) {\r\n          dispatch({ type: 'approve_receipt' })\r\n          onApproveSuccess({ state, receipt })\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: 'approve_error' })\r\n        logError(error)\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      }\r\n    },\r\n    handleConfirm: async (params = {}) => {\r\n      dispatch({ type: 'confirm_sending' })\r\n      try {\r\n        const tx = await onConfirm(params)\r\n        const receipt = await tx.wait()\r\n        if (receipt.status) {\r\n          dispatch({ type: 'confirm_receipt' })\r\n          onSuccess({ state, receipt })\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: 'confirm_error' })\r\n        logError(error)\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      }\r\n    },\r\n  }\r\n}\r\n\r\nexport default useApproveConfirmTransaction\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronRightIcon, Button as UIKitButton, AutoRenewIcon, ChevronDownIcon, Box, Flex } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nexport enum ButtonArrangement {\r\n  ROW = 'row',\r\n  SEQUENTIAL = 'sequential',\r\n}\r\n\r\ninterface ApproveConfirmButtonsProps {\r\n  isApproveDisabled: boolean\r\n  isApproving: boolean\r\n  isConfirming: boolean\r\n  isConfirmDisabled: boolean\r\n  onApprove: () => void\r\n  onConfirm: () => void\r\n  buttonArrangement?: ButtonArrangement\r\n  confirmLabel?: string\r\n  confirmId?: string\r\n}\r\n\r\nconst StyledApproveConfirmButtonRow = styled.div`\r\n  align-items: center;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  justify-content: center;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: 1fr 24px 1fr;\r\n  }\r\n`\r\n\r\nconst Button = styled(UIKitButton)`\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    min-width: 160px;\r\n  }\r\n`\r\n\r\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\r\n\r\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\r\n  display: block;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\r\n\r\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\r\n  isApproveDisabled,\r\n  isApproving,\r\n  isConfirming,\r\n  isConfirmDisabled,\r\n  onApprove,\r\n  onConfirm,\r\n  buttonArrangement = ButtonArrangement.ROW,\r\n  confirmLabel,\r\n  confirmId,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const confirmButtonText = confirmLabel ?? t('Confirm')\r\n\r\n  const ApproveConfirmRow = () => {\r\n    return (\r\n      <StyledApproveConfirmButtonRow>\r\n        <Box>\r\n          <Button\r\n            disabled={isApproveDisabled}\r\n            onClick={onApprove}\r\n            endIcon={isApproving ? spinnerIcon : undefined}\r\n            isLoading={isApproving}\r\n          >\r\n            {isApproving ? t('Enabling') : t('Enable')}\r\n          </Button>\r\n        </Box>\r\n        <Flex justifyContent=\"center\">\r\n          <ChevronRight />\r\n          <ChevronBottom />\r\n        </Flex>\r\n        <Box>\r\n          <Button\r\n            id={confirmId}\r\n            onClick={onConfirm}\r\n            disabled={isConfirmDisabled}\r\n            isLoading={isConfirming}\r\n            endIcon={isConfirming ? spinnerIcon : undefined}\r\n          >\r\n            {isConfirming ? t('Confirming') : confirmButtonText}\r\n          </Button>\r\n        </Box>\r\n      </StyledApproveConfirmButtonRow>\r\n    )\r\n  }\r\n\r\n  const ApproveConfirmSequential = () => {\r\n    return (\r\n      <>\r\n        {isApproveDisabled ? (\r\n          <Box>\r\n            <Button\r\n              id={confirmId}\r\n              onClick={onConfirm}\r\n              disabled={isConfirmDisabled}\r\n              isLoading={isConfirming}\r\n              endIcon={isConfirming ? spinnerIcon : undefined}\r\n            >\r\n              {isConfirming ? t('Confirming') : confirmButtonText}\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <Box>\r\n            <Button onClick={onApprove} endIcon={isApproving ? spinnerIcon : undefined} isLoading={isApproving}>\r\n              {isApproving ? t('Enabling') : t('Enable')}\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return buttonArrangement === ButtonArrangement.ROW ? ApproveConfirmRow() : ApproveConfirmSequential()\r\n}\r\n\r\nexport default ApproveConfirmButtons\r\n","import { useEffect, useMemo } from 'react'\r\nimport isEmpty from 'lodash/isEmpty'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchUserNfts } from 'state/nftMarket/reducer'\r\nimport { useGetCollections, useUserNfts } from 'state/nftMarket/hooks'\r\nimport usePreviousValue from 'hooks/usePreviousValue'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { NftLocation, UserNftInitializationState } from 'state/nftMarket/types'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\nconst useFetchUserNfts = () => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const { profile, isInitialized: isProfileInitialized, isLoading: isProfileLoading } = useProfile()\r\n  const { userNftsInitializationState } = useUserNfts()\r\n  const collections = useGetCollections()\r\n\r\n  const hasProfileNft = profile?.tokenId\r\n  const profileNftTokenId = profile?.tokenId?.toString()\r\n  const profileNftCollectionAddress = profile?.collectionAddress\r\n\r\n  const profileNftWithCollectionAddress = useMemo(() => {\r\n    if (hasProfileNft) {\r\n      return {\r\n        tokenId: profileNftTokenId,\r\n        collectionAddress: profileNftCollectionAddress,\r\n        nftLocation: NftLocation.PROFILE,\r\n      }\r\n    }\r\n    return null\r\n  }, [profileNftTokenId, profileNftCollectionAddress, hasProfileNft])\r\n\r\n  const previousProfileNftTokenId = usePreviousValue(profileNftTokenId)\r\n\r\n  // Fetch on first load when profile fetch is resolved\r\n  const shouldFetch =\r\n    account &&\r\n    userNftsInitializationState === UserNftInitializationState.UNINITIALIZED &&\r\n    isProfileInitialized &&\r\n    !isProfileLoading\r\n\r\n  // Fetch on account / profile change, once profile fetch is resolved\r\n  const hasAccountSwitched = previousProfileNftTokenId !== profileNftTokenId && !isProfileLoading && account\r\n\r\n  useEffect(() => {\r\n    if ((shouldFetch || hasAccountSwitched) && !isEmpty(collections)) {\r\n      dispatch(fetchUserNfts({ account, collections, profileNftWithCollectionAddress }))\r\n    }\r\n  }, [\r\n    dispatch,\r\n    account,\r\n    shouldFetch,\r\n    hasAccountSwitched,\r\n    profileNftTokenId,\r\n    collections,\r\n    profileNftWithCollectionAddress,\r\n  ])\r\n}\r\n\r\nexport default useFetchUserNfts\r\n"],"sourceRoot":""}